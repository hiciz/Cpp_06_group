객체지향 9월 11일 pair programing 7조 

U: 유시연 B:변유빈

B: 기계어에 대해서 얼마나 아세요?
    U: 이진수로 되어있다.
    B: 컴퓨터가 알아듣는 언어가 기계어라고 생각합니다.

B: 어셈블리어가 무슨 뜻인 거 같나요?
    U: 어셈블이라는 단어의 뜻이 합치다의 뜻이니, 뭐랑 뭐가 합쳐진 것 같다.
    B: C언어 같은 언어가 어셈블리어라고 생각한다.

B:고급 언어가 뭐라고 생각하시나요?
    B:코딩을 할 때 우리가 보고 해석을 할 수 있다. 그걸 고급언어라고 생각한다.
    U:고급언어는 우리가 컴퓨터에게 명령시키는 언어로, 컴퓨터는 그걸 기계어로 바꾸어 알아듣는다.

--

B: 막히는 부분 5개

B: 객체의 속성은?
    U:기본적인 속성은 갖고 있으면서 A라는 변수 A-1변수를 만든다면, A변수에 뭘 집어넣으면 A-1이 속성을 이어받는 것임.

B: 객체 지향이라는게 뭔가요?
    U: 

U: 연산자 재정의가 뭔가요?
    B:어떤 변수가 있는데, 그 변수를 잠깐 불러와서 형변환 할 수 있는 걸 말해요.

B: 참조에 의한 호출이 뭔가요?
    B: 어떤 걸 미리 짜놓고 그걸 불러올 수 있는 걸 말하는겁니다.

B: 캡슐화가 뭐라고 생각하시나요?
    U: 캡슐약을 떠올려보면, 약 안에 있는 화학물질들을 클래스라고 생각했고, 알약을 개체라고 생각했는데 얘네를 모아가지고 만드는 걸 캡슐화라고 생각했다.
        어떤 객체의 속성이나 기능들을 보호하기 위해서 private으로 외부로부터 감추고, public으로 필요한 부분만 외부로 노출되게 하는 것을 캡슐화라고 표현.
        즉, 교수님 자료 예제에서 나왔던 private이랑 public 모두 캡슐화에 해당한다.
    B: 저는 캡슐 안에 클래스와 객체가 있다고 생각했고, 그걸 class circle private에 캡슐화가 되어 있다 라고 생각했습니다.


상속성과 다형성에 대해서 
        B: C언어와 달리 C++은 코드 하나만 쓰면 그 기능을 물려받아서 귀찮게 일일이 안 써도 되는 것 같다.
        U: 보안을 하자면, 하나하나 상속 받는 것이 아니라 맨 첫 번째 하나가 상속받으면 두 번째는 첫 번재 상속을 받고, 
        그 상속받은 두 번째는 그걸 고대로 3번째에게 상속을 해주는 것이다.

        다향성?
        B: 다양한 객체들을 하나로 묶는 것이다.
        U: 다양한 객체들을 하나로 묶는 것이다, 근데 그림속의 상속받기가 왜 위로 가 있을까?
        교수님: 소리내기를 상속받아서 똑같은 소리를 내지않게 함수 재정의(오버라이딩)을 하는 것이다.
